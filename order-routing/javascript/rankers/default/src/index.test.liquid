{%- if flavor contains "vanilla-js" -%}
import { describe, it, expect } from 'vitest';
import orderRoutingLocationRule from './index';

/**
 * @typedef {import("../generated/api").FunctionResult} FunctionResult
 */

describe('order routing location rule function', () => {
  it('returns rank operations with all locations rank 0', () => {
    const result = orderRoutingLocationRule({
      "fulfillmentGroups": [{
          "handle": "123",
          "inventoryLocationHandles": ["456"]
      }]
    });
    const expected = /** @type {FunctionResult} */ ({
      operations: [{
        rank: {
          fulfillmentGroupHandle: "123",
          rankings: [{
            locationHandle: "456",
            rank: 0
          }]
        }
      }]
    });

    expect(result).toEqual(expected);
  });
});
{%- elsif flavor contains "typescript" -%}
import { describe, it, expect } from 'vitest';
import orderRoutingLocationRule from './index';
import { FunctionResult } from '../generated/api';

describe('order routing location rule function', () => {
  it('returns rank operations with all locations rank 0', () => {
    const result = orderRoutingLocationRule({
      fulfillmentGroups: [{
          handle: "123",
          inventoryLocationHandles: ["456"]
      }]
    });
    const expected: FunctionResult = {
      operations: [{
        rank: {
          fulfillmentGroupHandle: "123",
          rankings: [{
            locationHandle: "456",
            rank: 0
          }]
        }
      }]
    };

    expect(result).toEqual(expected);
  });
});
{%- endif -%}
