{
  "Internationalization": {
    "title": "Internationalization",
    "intro": "The app template comes with built-in internationalization support, so you can translate your app into multiple languages. This page shows examples of how to support multiple languages using the i18next framework.",
    "translating": {
      "title": "Translating your app",
      "intro": "When building apps, internationalization is important to ensure you can support as many merchants as possible. This template enables support for multiple languages by simply including JSON files with the appropriate translations.",
      "example": "You can create new translations by adding them to your {{localePath}} files, and using the {{hookName}} React hook to render them in your components.",
      "example_loader": "If you need to translate strings in your loader, you can use the {{remixI18nUtility}} utility to return a translated string to your React component using the {{useLoaderDataHook}}. This could be useful for strings received directly from your server, such as error messages.",
      "file": "This page is fully localized in your template, please see the {{filePath}} file."
    },
    "resources": {
      "title": "Resources",
      "i18next": "Translating with i18next",
      "remix-i18next": "remix-i18next documentation"
    }
  }
}
