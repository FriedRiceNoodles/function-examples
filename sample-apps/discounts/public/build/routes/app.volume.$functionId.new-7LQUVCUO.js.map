{
  "version": 3,
  "sources": ["../../../node_modules/isobject/index.js", "../../../node_modules/get-value/index.js", "../../../node_modules/fast-deep-equal/index.js", "../../../app/routes/app.volume.$functionId.new.jsx", "../../../node_modules/@shopify/react-form/build/esm/utilities.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/field/field.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/field/reducer.mjs"],
  "sourcesContent": ["/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n", "/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/app.volume.$functionId.new.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/app.volume.$functionId.new.jsx\");\n  import.meta.hot.lastModified = \"1690003115837.1387\";\n}\n// REMIX HMR END\n\nimport { useEffect, useState } from \"react\";\nimport { useField } from \"@shopify/react-form\";\nimport { Banner, Card, Divider, FormLayout, Layout, Page, PageActions, TextField, VerticalStack } from \"@shopify/polaris\";\nimport { Form, useActionData, useNavigation, useSubmit } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport { useAppBridge } from \"@shopify/app-bridge-react\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport { ActiveDatesCard, CombinationCard, DiscountClass, DiscountMethod, MethodCard, DiscountStatus, RequirementType, SummaryCard, UsageLimitsCard, onBreadcrumbAction } from \"@shopify/discount-app-components\";\nimport shopify from \"../shopify.server\";\n\n// This is a server-side action that is invoked when the form is submitted.\n// It makes an admin GraphQL request to create a payment customization.\nexport const action = async ({\n  params,\n  request\n}) => {\n  const {\n    functionId\n  } = params;\n  const {\n    admin\n  } = await shopify.authenticate.admin(request);\n  const formData = await request.formData();\n  const discountName = formData.get(\"discountName\");\n  const discountCode = formData.get(\"discountCode\");\n  const combinesWithProductDiscounts = formData.get(\"combinesWithProductDiscounts\");\n  const combinesWithOrderDiscounts = formData.get(\"combinesWithOrderDiscounts\");\n  const combinesWithShippingDiscounts = formData.get(\"combinesWithShippingDiscounts\");\n  const usageTotalLimit = formData.get(\"usageTotalLimit\");\n  const usageOncePerCustomer = formData.get(\"usageOncePerCustomer\");\n  const startDate = formData.get(\"startDate\");\n  const endDate = formData.get(\"endDate\");\n  const configuration = formData.get(\"configuration\");\n  const combinesWith = {\n    orderDiscounts: combinesWithOrderDiscounts === \"true\",\n    productDiscounts: combinesWithProductDiscounts === \"true\",\n    shippingDiscounts: combinesWithShippingDiscounts === \"true\"\n  };\n  const discountCreationInput = {\n    functionId,\n    title: discountName || discountCode,\n    code: discountCode,\n    combinesWith,\n    usageLimit: Number(usageTotalLimit),\n    appliesOncePerCustomer: Number(usageOncePerCustomer),\n    startsAt: startDate,\n    endsAt: endDate,\n    metafields: [{\n      namespace: \"$app:volume\",\n      key: \"function-configuration\",\n      type: \"json\",\n      value: JSON.stringify({\n        quantity: parseInt(configuration.quantity),\n        percentage: parseFloat(configuration.percentage)\n      })\n    }]\n  };\n  const response = await admin.graphql(`#graphql\n      mutation CreateCodeDiscount($discount: DiscountCodeAppInput!) {\n        discountCreate: discountCodeAppCreate(codeAppDiscount: $discount) {\n          userErrors {\n            code\n            message\n            field\n          }\n        }\n      }`, {\n    variables: {\n      discount: discountCreationInput\n    }\n  });\n  const responseJson = await response.json();\n  const errors = responseJson.data.discountCreate?.userErrors;\n  return json({\n    errors\n  });\n};\nconst useRedirectToDiscounts = () => {\n  _s();\n  const app = useAppBridge();\n  const redirect = Redirect.create(app);\n  return () => {\n    redirect.dispatch(Redirect.Action.ADMIN_PATH, {\n      path: \"/discounts\"\n    });\n  };\n};\n_s(useRedirectToDiscounts, \"rxUCIUKZj/XmLp2mdP6toeaW07c=\", false, function () {\n  return [useAppBridge];\n});\nexport default function VolumeNew() {\n  _s2();\n  const submit = useSubmit();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isLoading = navigation.state === \"submitting\";\n  const redirect = useRedirectToDiscounts();\n  const currencyCode = \"Cad\";\n  const submitErrors = actionData?.errors || [];\n  const [todaysDate] = useState(new Date());\n  useEffect(() => {\n    if (actionData?.errors.length === 0) {\n      redirect();\n    }\n  }, [actionData?.errors, redirect]);\n  const discountTitle = useField(\"\");\n  const discountMethod = useField(DiscountMethod.Code);\n  const discountCode = useField(\"\");\n  const combinesWith = useField({\n    orderDiscounts: false,\n    productDiscounts: false,\n    shippingDiscounts: false\n  });\n  const requirementType = useField(RequirementType.None);\n  const requirementSubtotal = useField(\"0\");\n  const requirementQuantity = useField(\"0\");\n  const usageTotalLimit = useField(null);\n  const usageOncePerCustomer = useField(false);\n  const startDate = useField(todaysDate);\n  const endDate = useField(null);\n  const configuration = {\n    // Add quantity and percentage configuration to form data\n    quantity: useField('1'),\n    percentage: useField('0')\n  };\n  const requestData = {\n    discountName: discountTitle.value,\n    discountMethod: discountMethod.value,\n    discountCode: discountCode.value,\n    combinesWithProductDiscounts: combinesWith.value.productDiscounts,\n    combinesWithOrderDiscounts: combinesWith.value.orderDiscounts,\n    combinesWithShippingDiscounts: combinesWith.value.shippingDiscounts,\n    requirementType: requirementType.value,\n    requirementSubtotal: requirementSubtotal.value,\n    requirementQuantity: requirementQuantity.value,\n    usageTotalLimit: usageTotalLimit.value,\n    usageOncePerCustomer: usageOncePerCustomer.value,\n    startDate: new Date(),\n    endDate: null,\n    configuration\n  };\n  const handleSubmit = () => {\n    submit(requestData, {\n      method: \"post\"\n    });\n  };\n  const errorBanner = submitErrors.length > 0 ? <Layout.Section>\n        <Banner status=\"critical\">\n          <p>There were some issues with your form submission:</p>\n          <ul>\n            {submitErrors.map(({\n          message,\n          field\n        }, index) => {\n          return <li key={`${message}${index}`}>\n                    {field.join(\".\")} {message}\n                </li>;\n        })}\n          </ul>\n        </Banner>\n      </Layout.Section> : null;\n  return (\n    // Render a discount form using Polaris components and the discount app components\n    <Page title=\"Create volume discount\" breadcrumbs={[{\n      content: \"Discounts\",\n      onAction: () => onBreadcrumbAction(redirect, true)\n    }]} primaryAction={{\n      content: \"Save\",\n      onAction: handleSubmit,\n      loading: isLoading\n    }}>\n    <Layout>\n      {errorBanner}\n      <Layout.Section>\n        <Form method=\"post\">\n        <VerticalStack align=\"space-around\" gap={2}>\n          <MethodCard title=\"Volume\" discountTitle={discountTitle} discountClass={DiscountClass.Product} discountCode={discountCode} discountMethod={discountMethod} />\n          {/* Collect data for the configuration metafield. */}\n          <Card title=\"Volume\">\n            <TextField label=\"Minimum quantity\" {...configuration.quantity} />\n            <TextField label=\"Discount percentage\" {...configuration.percentage} suffix=\"%\" />\n          </Card>\n          {discountMethod.value === DiscountMethod.Code && <UsageLimitsCard totalUsageLimit={usageTotalLimit} oncePerCustomer={usageOncePerCustomer} />}\n          <CombinationCard combinableDiscountTypes={combinesWith} discountClass={DiscountClass.Product} discountDescriptor={\"Discount\"} />\n          <ActiveDatesCard startDate={startDate} endDate={endDate} timezoneAbbreviation=\"EST\" />\n          </VerticalStack>\n\n        </Form>\n      </Layout.Section>\n      <Layout.Section secondary>\n        <SummaryCard header={{\n            discountMethod: discountMethod.value,\n            discountDescriptor: discountMethod.value === DiscountMethod.Automatic ? discountTitle.value : discountCode.value,\n            appDiscountType: \"Volume\",\n            isEditing: false\n          }} performance={{\n            status: DiscountStatus.Scheduled,\n            usageCount: 0\n          }} minimumRequirements={{\n            requirementType: requirementType.value,\n            subtotal: requirementSubtotal.value,\n            quantity: requirementQuantity.value,\n            currencyCode: currencyCode\n          }} usageLimits={{\n            oncePerCustomer: usageOncePerCustomer.value,\n            totalUsageLimit: usageTotalLimit.value\n          }} activeDates={{\n            startDate: startDate.value,\n            endDate: endDate.value\n          }} />\n      </Layout.Section>\n      <Layout.Section>\n        <PageActions primaryAction={{\n            content: \"Save discount\",\n            onAction: handleSubmit,\n            loading: isLoading\n          }} secondaryActions={[{\n            content: \"Discard\",\n            onAction: () => onBreadcrumbAction(redirect, true)\n          }]} />\n      </Layout.Section>\n    </Layout>\n    </Page>\n  );\n}\n_s2(VolumeNew, \"zb2Ftoky2hwDvO2YjA63PxTGYOI=\", false, function () {\n  return [useSubmit, useActionData, useNavigation, useRedirectToDiscounts, useField, useField, useField, useField, useField, useField, useField, useField, useField, useField, useField, useField, useField];\n});\n_c = VolumeNew;\nvar _c;\n$RefreshReg$(_c, \"VolumeNew\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import get from 'get-value';\n\nfunction isField(input) {\n  return Boolean(input) && Object.prototype.hasOwnProperty.call(input, 'value') && Object.prototype.hasOwnProperty.call(input, 'onChange') && Object.prototype.hasOwnProperty.call(input, 'onBlur') && Object.prototype.hasOwnProperty.call(input, 'defaultValue');\n}\nfunction mapObject(input, mapper) {\n  return Object.keys(input).reduce((accumulator, key) => {\n    const value = input[key];\n    accumulator[key] = mapper(value, key);\n    return accumulator;\n  }, {});\n} // Eg: set({a: 1}, ['b', 'c'], 2) // => {a: 1, b: {c: 2}}\n\nfunction setObject(obj, path, value) {\n  const [key, ...restPath] = path;\n\n  if (key == null || obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (!restPath.length) {\n    obj[key] = value;\n    return obj;\n  } // creates prop if it doesn't exist\n\n\n  if (typeof obj[key] === 'undefined') {\n    // look ahead to the next key. If it is a number, this prop is an array\n    obj[key] = typeof restPath[0] === 'number' ? [] : {};\n  }\n\n  obj[key] = setObject(obj[key], restPath, value);\n  return obj;\n}\n\nfunction normalizeValidation(input) {\n  return Array.isArray(input) ? input : [input];\n}\nfunction isChangeEvent(value) {\n  return typeof value === 'object' && value !== null && Reflect.has(value, 'target') && Reflect.has(value.target, 'value');\n}\nfunction propagateErrors(fieldBag, errors) {\n  errors.forEach(error => {\n    if (error.field == null) {\n      return;\n    }\n\n    const got = get(fieldBag, error.field);\n\n    if (got && isField(got)) {\n      if (got.error !== error.message) {\n        got.setError(error.message);\n      }\n    }\n  });\n} // Reduce function similar to Array.reduce() for a tree-like FieldBag\n\nfunction reduceFields(fieldBag, reduceFn, initialValue, reduceEmptyFn = value => value) {\n  return function reduceField(accumulator, item, path) {\n    if (isField(item)) {\n      return reduceFn(accumulator, item, path, fieldBag);\n    }\n\n    if (Array.isArray(item) && item.length) {\n      return item.reduce((_accumulator, value, index) => reduceField(_accumulator, value, path.concat(index)), accumulator);\n    }\n\n    if (typeof item === 'object' && item !== null) {\n      const entries = Object.entries(item);\n\n      if (entries.length) {\n        return entries.reduce((_accumulator, [key, value]) => reduceField(_accumulator, value, path.concat(key)), accumulator);\n      }\n    } // item is empty array, empty object, or primitive\n\n\n    return reduceEmptyFn(accumulator, item, path, fieldBag);\n  }(initialValue, fieldBag, []);\n}\nfunction fieldsToArray(fieldBag) {\n  return reduceFields(fieldBag, (fields, field) => fields.concat(field), []);\n}\nfunction validateAll(fieldBag) {\n  return reduceFields(fieldBag, (errors, field) => {\n    const message = field.runValidation();\n    return message ? errors.concat({\n      message\n    }) : errors;\n  }, []);\n}\nfunction getValues(fieldBag) {\n  return reduceFields(fieldBag, (formValue, field, path) => setObject(formValue, path, field.value), {}, (formValue, value, path) => setObject(formValue, path, value));\n}\nfunction getDirtyValues(fieldBag) {\n  const reduceFn = (acc, [fieldName, field]) => {\n    if (Array.isArray(field)) {\n      const dirtyArray = field.map(dirtyField => Object.entries(dirtyField).reduce(reduceFn, {})).filter(dirtyField => Object.keys(dirtyField).length);\n      return { ...acc,\n        ...(dirtyArray.length ? {\n          [fieldName]: dirtyArray\n        } : {})\n      };\n    }\n\n    if (!isField(field)) {\n      const dirtyField = Object.entries(field).reduce(reduceFn, {});\n      return { ...acc,\n        ...(Object.keys(dirtyField).length ? {\n          [fieldName]: dirtyField\n        } : {})\n      };\n    }\n\n    return { ...acc,\n      ...(field.dirty ? {\n        [fieldName]: field.value\n      } : {})\n    };\n  };\n\n  return Object.entries(fieldBag).reduce(reduceFn, {});\n}\nfunction shallowArrayComparison(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  const len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction defaultDirtyComparator(defaultValue, newValue) {\n  return Array.isArray(defaultValue) ? !shallowArrayComparison(defaultValue, newValue) : defaultValue !== newValue;\n}\nfunction makeCleanFields(fieldBag) {\n  reduceFields(fieldBag, (_, field) => field.newDefaultValue(field.value));\n}\nfunction makeCleanDynamicLists(dynamicLists) {\n  if (dynamicLists) {\n    Object.values(dynamicLists).forEach(dynamicList => {\n      dynamicList.newDefaultValue(dynamicList.value);\n    });\n  }\n}\n\nexport { defaultDirtyComparator, fieldsToArray, getDirtyValues, getValues, isChangeEvent, isField, makeCleanDynamicLists, makeCleanFields, mapObject, normalizeValidation, propagateErrors, reduceFields, shallowArrayComparison, validateAll };\n", "import { useMemo, useCallback, useEffect } from 'react';\nimport isEqual from 'fast-deep-equal';\nimport { isChangeEvent, normalizeValidation } from '../../utilities.mjs';\nimport { useFieldReducer, resetAction, newDefaultAction, updateErrorAction, updateAction } from './reducer.mjs';\n\n/**\n * A custom hook for handling the state and validations of an input field.\n *\n * In it's simplest form `useField` can be called with a single parameter for the default value of the field.\n *\n * ```typescript\n * const field = useField('default value');\n * ```\n *\n * You can also pass a more complex configuration object specifying a validation function.\n *\n *\n * ```typescript\n *const field = useField({\n *  value: someRemoteData.title,\n *  validates: (title) => {\n *    if (title.length > 3) {\n *      return 'Title must be longer than three characters';\n *    }\n *  }\n *});\n * ```\n *\n * You may also pass multiple validators.\n *\n *```typescript\n * const field = useField({\n *   value: someRemoteData.title,\n *   validates: [\n *      (title) => {\n *         if (title.length > 3) {\n *           return 'Title must be longer than three characters';\n *         }\n *      },\n *      (title) => {\n *         if (!title.includes('radical')) {\n *           return 'only radical items allowed!';\n *         }\n *       }\n *    ],\n * });\n * ```\n *\n * Generally, you will want to use the object returned from useField to handle state for exactly one form input.\n *\n * ```typescript\n * const field = useField('default value');\n * return (\n *   <div>\n *     <label htmlFor=\"test-field\">\n *       Test field{' '}\n *       <input\n *         id=\"test-field\"\n *         name=\"test-field\"\n *         value={field.value}\n *         onChange={field.onChange}\n *         onBlur={field.onBlur}\n *       />\n *     </label>\n *     {field.error && <p>{field.error}</p>}\n *   </div>\n * );\n * ```\n *\n * If using `@shopify/polaris` or other custom components that support `onChange`, `onBlur`, `value`, and `error` props then\n * you can accomplish the above more tersely by using the ES6 `spread` (...) operator.\n *\n * ```typescript\n * const title = useField('default title');\n * return (<TextField label=\"Title\" {...title} />);\n * ```\n *\n * @param config - The default value of the input, or a configuration object specifying both the value and validation config.\n * @param validationDependencies - An array of values for determining when to regenerate the field's validation callbacks. Any value that is referenced by a validator other than those passed into it should be included.\n * @returns A `Field` object representing the state of your input. It also includes functions to manipulate that state. Generally, you will want to pass these callbacks down to the component or components representing your input.\n *\n * @remarks\n * **Reinitialization:** If the `value` property of the field configuration changes between calls to `useField`,\n * the field will be reset to use it as it's new default value.\n *\n * **Imperative methods:** The returned `Field` object contains a number of methods used to imperatively alter its state.\n * These should only be used as escape hatches where the existing hooks and components do not make your life easy,\n * or to build new abstractions in the same vein as `useForm`, `useSubmit` and friends.\n */\nfunction useField(input, dependencies = []) {\n  const {\n    value,\n    validates,\n    dirtyStateComparator\n  } = normalizeFieldConfig(input);\n  const validators = normalizeValidation(validates);\n  const [state, dispatch] = useFieldReducer(value, dirtyStateComparator);\n  const resetActionObject = useMemo(() => resetAction(), []);\n  const reset = useCallback(() => dispatch(resetActionObject), [dispatch, resetActionObject]);\n  const newDefaultValue = useCallback(value => dispatch(newDefaultAction(value)), [dispatch]);\n  const runValidation = useCallback((value = state.value) => {\n    const errors = validators.map(check => check(value, {})).filter(value => value != null);\n\n    if (errors && errors.length > 0) {\n      const [firstError] = errors;\n      dispatch(updateErrorAction(errors));\n      return firstError;\n    }\n\n    dispatch(updateErrorAction(undefined));\n    return undefined;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [state.value, ...dependencies]);\n  const onChange = useCallback(value => {\n    const normalizedValue = isChangeEvent(value) ? value.target.value : value;\n    dispatch(updateAction(normalizedValue));\n\n    if (state.error) {\n      runValidation(normalizedValue);\n    }\n  }, [runValidation, state.error, dispatch]);\n  const setError = useCallback(value => dispatch(updateErrorAction(value)), [dispatch]);\n  const onBlur = useCallback(() => {\n    if (state.touched === false && state.error == null) {\n      return;\n    }\n\n    runValidation();\n  }, [runValidation, state.touched, state.error]); // We want to reset the field whenever a new `value` is passed in\n\n  useEffect(() => {\n    if (!isEqual(value, state.defaultValue)) {\n      newDefaultValue(value);\n    } // We actually do not want this to rerun when our `defaultValue` is updated. It can\n    // only happen independently of this callback when `newDefaultValue` is called by a user,\n    // and we don't want to undue their hard work by resetting to `value`.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, newDefaultValue]);\n  const field = useMemo(() => {\n    return { ...state,\n      onBlur,\n      onChange,\n      newDefaultValue,\n      runValidation,\n      setError,\n      reset\n    };\n  }, [state, onBlur, onChange, newDefaultValue, runValidation, setError, reset]);\n  return field;\n}\n\n/**\n * Converts a standard `Field<Value>` into a `ChoiceField` that is compatible\n * with `<Checkbox />` and `<RadioButton />` components in `@shopify/polaris`.\n *\n * For fields that are used by both a choice components and other components, it\n * can be beneficial to retain the original `Field<Value>` shape and convert\n * the field on the fly for the choice component.\n *\n * For multi-value base fields (not simple boolean fields), you can provide a\n * checkedValue predicate to project the base field's value into the boolean\n * checked state so that it can function with multiple <RadioButton /> choice\n * components.\n *\n * ```typescript\n * const enabled = useField(false);\n * return (<Checkbox label=\"Enabled\" {...asChoiceField(enabled)} />);\n *\n * const field = useField<'A' | 'B'>('A');\n * const radioA = (<RadioButton label=\"A\" {...asChoiceField(field, 'A')} />)\n * const radioB = (<RadioButton label=\"B\" {...asChoiceField(field, 'B')} />)\n * ```\n */\nfunction asChoiceField({\n  value,\n  ...fieldData\n}, checkedValue = true) {\n  return { ...fieldData,\n    checked: value === checkedValue,\n\n    onChange(checked) {\n      if (typeof checkedValue === 'boolean') {\n        fieldData.onChange(checked);\n      } else if (checked) {\n        fieldData.onChange(checkedValue);\n      }\n    }\n\n  };\n}\n/**\n * Converts a standard `Field<Value>` into a form that is compatible\n * with the `<ChoiceList />` component in `@shopify/polaris`.\n *\n * For fields that are used by both choice components and other components, it\n * can be beneficial to retain the original `Field<Value>` shape and convert\n * the field on the fly for the choice component.\n *\n * It only works with Radio buttons (single selection), not checkboxes.\n *\n * ```typescript\n * enum Color { Red = \"red\", Green = \"green\" }\n *\n * const choices = [\n *   { label: \"Red\", value: Color.Red },\n *   { label: \"Green\", value: Color.Green },\n * ]\n *\n * const color = useField(Color.Red);\n * return (<ChoiceList {...asChoiceList(color)} title=\"Color\" choices={choices} />);\n * ```\n */\n\nfunction asChoiceList({\n  value,\n  onChange,\n  ...fieldData\n}) {\n  return { ...fieldData,\n    selected: value === undefined || value === null ? [] : [value],\n    onChange: selected => {\n      onChange(selected[0]);\n    },\n    allowMultiple: false\n  };\n}\n/**\n * A simplification to `useField` that returns a `ChoiceField` by automatically\n * converting a boolean field using `asChoiceField` for direct use in choice\n * components.\n *\n * ```typescript\n * const enabled = useChoiceField(false);\n * return (<Checkbox label=\"Enabled\" {...enabled} />);\n * ```\n */\n\nfunction useChoiceField(input, dependencies = []) {\n  return asChoiceField(useField(input, dependencies));\n}\n\nfunction normalizeFieldConfig(input) {\n  if (isFieldConfig(input)) {\n    return input;\n  }\n\n  return {\n    value: input,\n    validates: () => undefined\n  };\n}\n\nfunction isFieldConfig(input) {\n  return input != null && typeof input === 'object' && Reflect.has(input, 'value') && Reflect.has(input, 'validates');\n}\n\nexport { asChoiceField, asChoiceList, useChoiceField, useField };\n", "import { useReducer } from 'react';\nimport { shallowArrayComparison, defaultDirtyComparator } from '../../utilities.mjs';\n\nfunction updateAction(value) {\n  return {\n    type: 'update',\n    payload: value\n  };\n}\nfunction resetAction() {\n  return {\n    type: 'reset'\n  };\n}\nfunction newDefaultAction(value) {\n  return {\n    type: 'newDefaultValue',\n    payload: value\n  };\n}\nfunction updateErrorAction(error) {\n  return {\n    type: 'updateError',\n    payload: error\n  };\n}\nconst shallowFieldReducer = makeFieldReducer({\n  dirtyStateComparator: defaultDirtyComparator\n});\nfunction reduceField(prevState, action) {\n  return shallowFieldReducer(prevState, action);\n}\nfunction makeFieldReducer({\n  dirtyStateComparator = defaultDirtyComparator\n}) {\n  return (state, action) => {\n    switch (action.type) {\n      case 'update':\n        {\n          const newValue = action.payload;\n          const {\n            defaultValue\n          } = state;\n          const dirty = dirtyStateComparator(defaultValue, newValue);\n          return { ...state,\n            dirty,\n            value: newValue,\n            touched: true\n          };\n        }\n\n      case 'updateError':\n        {\n          const payload = Array.isArray(action.payload) ? action.payload : [action.payload];\n          const [firstError] = payload;\n          const allErrors = firstError ? payload : [];\n\n          if (shallowArrayComparison(allErrors, state.allErrors)) {\n            return { ...state,\n              error: firstError\n            };\n          } else {\n            return { ...state,\n              error: firstError,\n              allErrors\n            };\n          }\n        }\n\n      case 'reset':\n        {\n          const {\n            defaultValue\n          } = state;\n          return { ...state,\n            error: undefined,\n            value: defaultValue,\n            dirty: false,\n            touched: false,\n            allErrors: []\n          };\n        }\n\n      case 'newDefaultValue':\n        {\n          const newDefaultValue = action.payload;\n          return { ...state,\n            error: undefined,\n            value: newDefaultValue,\n            defaultValue: newDefaultValue,\n            touched: false,\n            dirty: false\n          };\n        }\n    }\n  };\n}\nfunction useFieldReducer(value, dirtyStateComparator) {\n  return useReducer(makeFieldReducer({\n    dirtyStateComparator\n  }), initialFieldState(value));\n}\nfunction initialFieldState(value) {\n  return {\n    value,\n    defaultValue: value,\n    error: undefined,\n    touched: false,\n    dirty: false,\n    allErrors: []\n  };\n}\n\nexport { initialFieldState, makeFieldReducer, newDefaultAction, reduceField, resetAction, updateAction, updateErrorAction, useFieldReducer };\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "value", "isEqual"]
}
