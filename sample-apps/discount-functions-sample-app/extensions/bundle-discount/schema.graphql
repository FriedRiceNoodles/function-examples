schema {
  query: MerchandiseDiscountRoot
  mutation: MerchandiseDiscountMutationRoot
}

type Address {
  city: String
  countryCode: String
  phone: String
  poBox: Boolean!
  provinceCode: String
  zip: String
}

type Customer implements HasMetafields {
  acceptsMarketing: Boolean
  email: String
  id: UnsignedInt64!

  """
  Returns a metafield by namespace and key that belongs to the resource.
  """
  metafield(
    """
    The key for the metafield.
    """
    key: String!

    """
    The namespace for the metafield.
    """
    namespace: String!
  ): Metafield
  orderCount: Int
  phone: String
  tags: [String!]
  totalSpent: Money
}

type DeliveryLine {
  destination: Address
  index: Int
  subscription: Boolean
}

interface HasMetafields {
  """
  Returns a metafield by namespace and key that belongs to the resource.
  """
  metafield(
    """
    The key for the metafield.
    """
    key: String!

    """
    The namespace for the metafield.
    """
    namespace: String!
  ): Metafield
}

"""
A [JSON](https://www.json.org/json-en.html) object.

Example value:
`{
  "product": {
    "id": "gid://shopify/Product/1346443542550",
    "title": "White T-shirt",
    "options": [{
      "name": "Size",
      "values": ["M", "L"]
    }]
  }
}`
"""
scalar JSON

type MerchandiseDiscountRoot {
  customer: Customer
  deliveryLines: [DeliveryLine!]
  locale: String
  merchandiseLines: [MerchandiseLine!]
}

type MerchandiseLine {
  index: Int
  price: Money!
  properties: [Property!]
  quantity: Int
  sellingPlan: SellingPlan
  variant: Variant
  weight: Int
}

type Metafield {
  type: String!
  value: JSON!
}

type Money {
  currency: String!
  subunits: UnsignedInt64!
}

type Product implements HasMetafields {
  giftCard: Boolean
  id: UnsignedInt64!

  """
  Returns a metafield by namespace and key that belongs to the resource.
  """
  metafield(
    """
    The key for the metafield.
    """
    key: String!

    """
    The namespace for the metafield.
    """
    namespace: String!
  ): Metafield
  tags: [String!]
  title: String
  type: String
  vendor: String
}

type Property {
  key: String!
  value: String!
}

type SellingPlan {
  id: UnsignedInt64!
}

"""
Unsigned integer of up to 64 bit, encoded as a number (not a string).
Example value: `1099511627776`
"""
scalar UnsignedInt64

type Variant implements HasMetafields {
  compareAtPrice: Money
  id: UnsignedInt64!

  """
  Returns a metafield by namespace and key that belongs to the resource.
  """
  metafield(
    """
    The key for the metafield.
    """
    key: String!

    """
    The namespace for the metafield.
    """
    namespace: String!
  ): Metafield
  product: Product
  sku: String
  title: String
}

type MerchandiseDiscountMutationRoot {
  outputDiscounts(discounts: [Discount!]): Boolean
}

input Discount {
  value: Value!
  targets: [ProductVariantTarget!]!
  conditions: [ProductCondition!]
  message: String
}
 
type FixedAmount {
  value: Float!
  appliesToEachItem: Boolean
}
 
# Unions are not supported in GraphQL inputs
# union Value = FixedAmount | Percentage

input Value {
  value: Float!
}

input ProductVariantTarget {
  id: UnsignedInt64!
  quantity: Int
}

enum TargetType {
  PRODUCT_VARIANT
}

# Unions are not supported in GraphQL inputs
# union ProductCondition = ProductMinimumSubtotal | ProductMinimumQuantity
input ProductCondition {
  targetType: TargetType! # PRODUCT_VARIANT
  ids: [UnsignedInt64]!
  minimumAmount: Float!
}
 
input ProductMinimumQuantity {
  targetType: TargetType! # PRODUCT_VARIANT
  ids: [UnsignedInt64]!
  minimumQuantity: Int!
}
