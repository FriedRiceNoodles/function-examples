{%- if flavor contains "vanilla-js" -%}
import { describe, it, expect } from 'vitest';
import { run } from './index';

/**
 * @typedef {import("../generated/api").FunctionResult} FunctionResult
 */

describe('order submission rule function', () => {
  it('returns no operations without configuration', () => {
    const result = run({
      orderSubmissionRule: {
        metafield: null
      }
    });
    const expected = /** @type {FunctionResult} */ ({ operations: [] });

    expect(result).toEqual(expected);
  });
});
{%- elsif flavor contains "typescript" -%}
import { describe, it, expect } from 'vitest';
import { run } from './index';
import { FunctionResult } from '../generated/api';

describe('order submission rule function', () => {
  it('returns no operations without configuration', () => {
    const result = run({
      orderSubmissionRule: {
        metafield: null
      }
    });
    const expected: FunctionResult = { operations: [] };

    expect(result).toEqual(expected);
  });
});
{% endif -%}
